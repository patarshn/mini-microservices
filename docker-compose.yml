version: '3'
services:
# Incase need local mongo
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - ./auth-service/.env
    depends_on:
      - mongo


  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres

  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - clickhouse
      - minio

  orchestrator-service:
    build:
      context: ./orchestrator-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"

# Incase need local postgres
  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: productdb
    ports:
      - "5432:5432"

  clickhouse:
    image: yandex/clickhouse-server:latest
    ports:
      - "8123:8123"

  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    ports:
      - "9000:9000"

  nginx:
    image: nginx:latest
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - product-service
      - transaction-service

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
    networks:
    - default

  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    ports:
     - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - default


networks:
  default:
    driver: bridge